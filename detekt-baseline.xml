<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>ComplexMethod:Main.kt$fun main()</ID>
    <ID>FunctionNaming:GridBox.kt$GridContentBuilder$public fun Styling.GridItem(spec: GridItemLayout.() -&gt; Unit)</ID>
    <ID>FunctionNaming:ListGroup.kt$private fun &lt;T : HTMLElement&gt; AttrsScope&lt;T&gt;.ListGroupAttrs( flush: Boolean = false, numbered: Boolean = false, listGroupDirection: ListGroupDirection = ListGroupDirection.Vertical, attrs: AttrBuilderContext&lt;T&gt;? = null, )</ID>
    <ID>FunctionNaming:ListGroup.kt$private fun &lt;T : HTMLElement&gt; AttrsScope&lt;T&gt;.ListItemAttrs( active: Boolean = false, disabled: Boolean = false, actionable: Boolean = false, background: Color? = null, attrs: AttrBuilderContext&lt;T&gt;? = null, )</ID>
    <ID>LongMethod:Table.kt$Table.Pagination$public fun defaultControl(): PageControl&lt;T&gt;</ID>
    <ID>LongParameterList:Table.kt$Table.Builder$( title: String, scope: Scope? = null, header: Header? = null, footer: Footer? = null, cellColor: Color? = null, verticalAlignment: Layout.VerticalAlignment? = null, cell: ContentBuilder&lt;HTMLTableCellElement&gt; )</ID>
    <ID>LongParameterList:Table.kt$Table.OffsetPagination$( data: List&lt;T&gt;, entriesPerPageLimit: State&lt;Int&gt;, startPageIndex: Int = 0, position: Pagination.Position = Pagination.Position.Bottom, numberOfButtons: Int = 5, actionNavigateBack: ((CurrentPage&lt;T&gt;, Pagination.Page&lt;T&gt;) -&gt; Unit)? = null, actionNavigateForward: ((CurrentPage&lt;T&gt;, Pagination.Page&lt;T&gt;) -&gt; Unit)? = null, control: PageControl&lt;T&gt; )</ID>
    <ID>LongParameterList:Table.kt$Table.OffsetPagination$( data: List&lt;T&gt;, public override val entriesPerPageLimit: State&lt;Int&gt;?, public override val startPageIndex: Int = 0, public override val position: Pagination.Position? = Pagination.Position.Bottom, public override val numberOfButtons: Int = 5, public override val actionNavigateBack: ((CurrentPage&lt;T&gt;, Pagination.Page&lt;T&gt;) -&gt; Unit)? = null, public override val actionNavigateForward: ((CurrentPage&lt;T&gt;, Pagination.Page&lt;T&gt;) -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:Toasts.kt$ToastContainerState$( withDismissButton: Boolean = true, delay: Duration = 5.seconds, toastAttrs: (AttrsScope&lt;HTMLDivElement&gt;.() -&gt; Unit)? = null, dismissButtonAttrs: (AttrsScope&lt;HTMLButtonElement&gt;.() -&gt; Unit)? = null, header: ContentBuilder&lt;HTMLDivElement&gt;? = null, body: ContentBuilder&lt;HTMLDivElement&gt; )</ID>
    <ID>MagicNumber:BoxView.kt$4</ID>
    <ID>MagicNumber:BoxView.kt$50</ID>
    <ID>MagicNumber:ChecksAndRadiosView.kt$3</ID>
    <ID>MagicNumber:DropDownView.kt$4</ID>
    <ID>MagicNumber:GridBoxView.kt$3</ID>
    <ID>MagicNumber:GridBoxView.kt$4</ID>
    <ID>MagicNumber:GridBoxView.kt$5</ID>
    <ID>MagicNumber:RangeView.kt$1.5</ID>
    <ID>MagicNumber:RangeView.kt$5</ID>
    <ID>MagicNumber:Styling.kt$Text$6</ID>
    <ID>MagicNumber:Table.kt$Table.Pagination$4</ID>
    <ID>MagicNumber:TableView.kt$3</ID>
    <ID>MagicNumber:TableView.kt$800</ID>
    <ID>MagicNumber:TableView.kt$CalcPagination$10</ID>
    <ID>MaxLineLength:TableTest.kt$TableTest$expected = """&lt;table class="table"&gt;&lt;thead&gt;&lt;tr&gt;&lt;th scope="col"&gt;&lt;div class="row"&gt;&lt;div class="col"&gt;Title&lt;/div&gt;&lt;div class="col col-auto"&gt;&lt;button class="btn btn-primary" type="submit"&gt;Text&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/th&gt;&lt;th scope="col"&gt;empty&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Foo&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Bar&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;"""</ID>
    <ID>MaximumLineLength:app.softwork.bootstrapcompose.TableTest.kt:112</ID>
    <ID>TooManyFunctions:GridBox.kt$GridItemArea</ID>
    <ID>TooManyFunctions:GridBox.kt$GridItemAreaSpec</ID>
    <ID>TooManyFunctions:InputGroup.kt$InputGroupContext</ID>
    <ID>UnusedPrivateMember:bootstrap.kt$Modal$element: HTMLDivElement</ID>
    <ID>UnusedPrivateMember:bootstrap.kt$Offcanvas$element: HTMLDivElement</ID>
    <ID>UnusedPrivateMember:bootstrap.kt$Toast$element: HTMLDivElement</ID>
    <ID>VariableNaming:Table.kt$val _footers = mutableListOf&lt;Table.Footer&gt;()</ID>
  </CurrentIssues>
</SmellBaseline>
